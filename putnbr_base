#include <unistd.h>
void putchar(char c)
{
	write(1, &c, 1);
}
void	isvalide(char *base)
{
	int i = 0;
	while(base[i])
	{
		if (s[i] == '-' || s[i] == '+')
			return 1;
		i++;
	}
}
void	recur(long n, char *base, int size)
{
	if (n < size)
	{
		putchar(base[n]);
    return;
	}
	recur(n / size, base, size);
	putchar(base[n % size]);
}
void	ft_putnbr_base(int nb, char *base)
{
	long n = nb;
	int size = 0;
	int i = 0;

	while (base[i])
		i++;
	if (i < 2)
		return;
	if (!isvalide(base))
		return 0;
	recur(n, base, size);

}
int main()
{
	ft_putnbr_base(42, "01");          write(1, "\n", 1); // 101010
	ft_putnbr_base(-42, "0123456789"); write(1, "\n", 1); // -42
	ft_putnbr_base(255, "0123456789ABCDEF"); write(1, "\n", 1); // FF
	ft_putnbr_base(255, "poneyvif");    write(1, "\n", 1); // ff (selon base)
	ft_putnbr_base(-2147483648, "0123456789"); write(1, "\n", 1); // -2147483648
	ft_putnbr_base(123, "0");           write(1, "\n", 1); // (rien, base invalide)
	ft_putnbr_base(123, "++01");        write(1, "\n", 1); // (rien)
}
